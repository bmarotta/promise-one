{
  "name": "promise-one",
  "version": "0.0.1",
  "description": "Resilient singleton promise to make sure it runs once and only once. Differently from most singleton promise implementations it retries if failed.",
  "main": "./dist/index.js",
  "types": "./dist/index.d.ts",
  "scripts": {
    "clean": "rimraf dist",
    "test": "jest --config jest.config.js --collect-coverage",
    "test-watch": "jest --config jest.config.js --collect-coverage --watchAll",
    "build": "npm run clean && rollup -c rollup.config.js",
    "build:es": "npm run clean && rollup -c rollup.config.es.js",
    "watch": "rollup -w -c rollup.config.js",
    "watch:es": "rollup -w -c rollup.config.es.js",
    "format": "prettier --write \"src/**/*.ts\"",
    "lint": "npm run format && eslint . --ext .ts --fix"
  },
  "devDependencies": {
    "@types/jest": "latest",
    "@types/node": "latest",
    "@typescript-eslint/eslint-plugin": "latest",
    "@typescript-eslint/parser": "latest",
    "eslint": "latest",
    "eslint-config-prettier": "latest",
    "jest": "latest",
    "jest-junit": "latest",
    "prettier": "latest",
    "rollup": "latest",
    "rollup-plugin-typescript2": "latest",
    "ts-jest": "latest",
    "typescript": "latest"
  },
  "keywords": [
    "singleton",
    "promise",
    "resilient",
    "retry"
  ],
  "author": "Bruno Marotta",
  "license": "MIT"
}
